/// Flutter icons MyFlutterApp
/// Copyright (C) 2022 by original authors @ fluttericon.com, fontello.com
/// This font was generated by FlutterIcon.com, which is derived from Fontello.
///
/// To use this font, place it in your fonts/ directory and include the
/// following in your pubspec.yaml
///
/// flutter:
///   fonts:
///    - family:  MyFlutterApp
///      fonts:
///       - asset: fonts/MyFlutterApp.ttf
///
///
/// * Font Awesome 4, Copyright (C) 2016 by Dave Gandy
///         Author:    Dave Gandy
///         License:   SIL ()
///         Homepage:  http://fortawesome.github.com/Font-Awesome/
/// * Font Awesome 5, Copyright (C) 2016 by Dave Gandy
///         Author:    Dave Gandy
///         License:   SIL (https://github.com/FortAwesome/Font-Awesome/blob/master/LICENSE.txt)
///         Homepage:  http://fortawesome.github.com/Font-Awesome/
/// * Entypo, Copyright (C) 2012 by Daniel Bruce
///         Author:    Daniel Bruce
///         License:   SIL (http://scripts.sil.org/OFL)
///         Homepage:  http://www.entypo.com
/// * Elusive, Copyright (C) 2013 by Aristeides Stathopoulos
///         Author:    Aristeides Stathopoulos
///         License:   SIL (http://scripts.sil.org/OFL)
///         Homepage:  http://aristeides.com/
/// * Iconic, Copyright (C) 2012 by P.J. Onori
///         Author:    P.J. Onori
///         License:   SIL (http://scripts.sil.org/OFL)
///         Homepage:  http://somerandomdude.com/work/iconic/
/// * Fontelico, Copyright (C) 2012 by Fontello project
///         Author:    Crowdsourced, for Fontello project
///         License:   SIL (http://scripts.sil.org/OFL)
///         Homepage:  http://fontello.com
/// * Material Design Icons, Copyright (C) Google, Inc
///         Author:    Google
///         License:   Apache 2.0 (https://www.apache.org/licenses/LICENSE-2.0)
///         Homepage:  https://design.google.com/icons/
/// * RPG Awesome, Copyright (c) 2014, Daniela Howe
///         Author:    Daniela Howe & Ivan Montiel
///         License:   SIL (http://scripts.sil.org/OFL)
///         Homepage:  http://nagoshiashumari.github.io/Rpg-Awesome/
/// * Octicons, Copyright (C) 2020 by GitHub Inc.
///         Author:    GitHub
///         License:   MIT (http://opensource.org/licenses/mit-license.php)
///         Homepage:  https://primer.style/octicons/
///
// ignore_for_file: constant_identifier_names

import 'package:flutter/widgets.dart';

class MyFlutterApp {
  MyFlutterApp._();

  static const _kFontFam = 'MyFlutterApp';
  static const String? _kFontPkg = null;

  static const IconData award =
      IconData(0xe800, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData to_end =
      IconData(0xe801, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData to_end_alt =
      IconData(0xe802, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData youtube_1 =
      IconData(0xe803, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData hourglass_end =
      IconData(0xe804, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData hourglass_half =
      IconData(0xe805, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData hourglass_start =
      IconData(0xe806, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData hourglass_4 =
      IconData(0xe807, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData link =
      IconData(0xe808, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData book =
      IconData(0xe809, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData group_circled =
      IconData(0xe80a, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData group =
      IconData(0xe80b, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData university =
      IconData(0xe80c, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData to_start =
      IconData(0xe80d, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData key_2 =
      IconData(0xe80e, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData key_3 =
      IconData(0xe80f, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData info =
      IconData(0xe810, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData chat =
      IconData(0xe811, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData crown_plus =
      IconData(0xe845, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData info_outline =
      IconData(0xe9af, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData perm_device_information =
      IconData(0xea63, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData podium =
      IconData(0xea70, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData search =
      IconData(0xf002, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData home =
      IconData(0xf015, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData comment =
      IconData(0xf075, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData key_1 =
      IconData(0xf084, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData comments =
      IconData(0xf086, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData trophy =
      IconData(0xf091, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData link_1 =
      IconData(0xf0c1, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData exclamation =
      IconData(0xf12a, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData youtube_squared =
      IconData(0xf166, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData youtube =
      IconData(0xf167, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData archive =
      IconData(0xf187, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData bank =
      IconData(0xf19c, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData language =
      IconData(0xf1ab, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData user_times =
      IconData(0xf235, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData hourglass_1 =
      IconData(0xf251, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData hourglass_2 =
      IconData(0xf252, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData hourglass_3 =
      IconData(0xf253, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData hourglass =
      IconData(0xf254, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData key =
      IconData(0xf31b, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData verified =
      IconData(0xf3a2, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData comment_discussion =
      IconData(0xf3c1, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData clipboard_list =
      IconData(0xf46d, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData globe_americas =
      IconData(0xf57d, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData medal =
      IconData(0xf5a2, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData poll_h =
      IconData(0xf682, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData remove_format =
      IconData(0xf87d, fontFamily: _kFontFam, fontPackage: _kFontPkg);
}
